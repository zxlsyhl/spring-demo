<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 读取属性文件 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:db.properties"></property>
    </bean>
    <!-- 配置dataSource -->
    <bean id = "dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>

    </bean>
    <!-- <bean id ="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://localhost:3306/school?serverTimezone=GMT"/>
    <property name="username" value="root" />
    <property name="password" value="123456" />
    </bean> -->


    <!-- 配置sqlSessionFactory: 将spring和mybatis整合-->
    <bean id = "sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!--<property name="configLocation" value="sqlMapConfig.xml"></property>-->
        <property name="mapperLocations" value="classpath:org/zxl/springdemo/mvc/repository/*Mapper.xml"></property>
        <!--<property name="mapperLocations" value="classpath:zxl/com/springspringmvcmybatis/repository/*Mapper.xml"></property>-->
        <property name="typeAliasesPackage" value="org.zxl.springdemo.mvc.entity"/>
    </bean>

    <!--配置 MapperScannerConfigurer：将Mapper接口生成代理注入到Spring -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.zxl.springdemo.mvc.repository"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id = "txManage" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--配置事务传播特性 -->
    <tx:advice id = "txAdvice" transaction-manager = "txManage">
        <tx:attributes>
            <tx:method name="get" propagation = "REQUIRED" read-only="true"/>
            <tx:method name="update" propagation = "REQUIRED"/>
            <tx:method name="delete" propagation = "REQUIRED"/>
            <tx:method name="insert" propagation = "REQUIRED"/>
            <tx:method name="*" propagation = "REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut expression="execution(* org.zxl.springdemo.mvc.repository.*.*(..))" id="pointcut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>
    <!-- 进行包的自动扫描 -->
    <context:component-scan base-package="org.zxl.springdemo.mvc"></context:component-scan>


    <!-- 配置类型转换器工厂 -->
    <!--<bean id="converterService"   class="org.springframework.context.support.ConversionServiceFactoryBean">-->
        <!--&lt;!&ndash; 给工厂注入一个新的类型转换器 &ndash;&gt;-->
        <!--<property name="converters">-->
            <!--<array>-->
                <!--&lt;!&ndash; 配置自定义类型转换器 &ndash;&gt;-->
                <!--<bean class="org.zxl.springdemo.mvc.converter.BaseEnumConverterFactory"></bean>-->
            <!--</array>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 引用自定义类型转换器 -->
    <!--<mvc:annotation-driven-->
            <!--conversion-service="converterService"></mvc:annotation-driven>-->
</beans>